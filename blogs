[{
		"_id": "5b21ca3eeb7f6fbccd471815",
		"id": "Artificial-intelligence-in-fiction-5b21ca3eeb7f6fbccd471815",
		"title": "Artificial intelligence in fiction",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471818",
			"name": "Artificial Intelligence"
		},
		"keywords": ["Fiction"],
		"dailyRentalRate": 2.5,
		"metadata": ["Even the most futuristic applications of AI, from robotic servants to instant health scans, somehow already seem familiar because they have been endless fodder for pop culture. At the movies, you’ve probably seen artificial intelligence as a menace in The Terminator or 2001: A Space Odyssey; as a near-destroyer of the world in WarGames; as our master in The Matrix; or as a companion (as in Her and in the Stanley Kubrick–Steven Spielberg combination that was called A.I. Artificial Intelligence). But many lesser-known stories, plays, TV shows, and films stand out as well for their perceptiveness about how sophisticated AI will affect us. Here are a few suggestions."],

		"publishDate": "2021-01-03T19:04:28.809Z"
	}, {
		"_id": "5b21ca3eeb7f6fbccd471816",
		"id": "Federated-Learning-5b21ca3eeb7f6fbccd471816",
		"title": "Federated Learning",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471818",
			"name": "Artificial Intelligence"
		},
		"keywords": ["Federated Learning"],
		"dailyRentalRate": 2.5,
		"metadata": ["Federated learning (FL) in contrast, is an approach that downloads the current model and computes an updated model at the device itself (ala edge computing) using local data. These locally trained models are then sent from the devices back to the central server where they are aggregated, i.e. averaging weights, and then a single consolidated and improved global model is sent back to the devices."],

		"publishDate": "2021-01-03T19:04:28.809Z"
	},
	{
		"_id": "5b21ca3eeb7f6fbccd471817",
		"id": "Software-Defined-Network-5b21ca3eeb7f6fbccd471817",
		"title": "Software Defined Network",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471814",
			"name": "Network"
		},
		"keywords": ["Software Defined Network"],
		"dailyRentalRate": 2.5,
		"metadata": ["Hardware control in the networking world was relevant to the year 2008 timeframe. It is when the first emergence of software-defined networking (SDN) become noticeable with the OpenFlow protocol. Then it used to be regarded as a technology that falls in the category of distinguished network control mechanism which streamlined automation and policy-based organization of the network resources."],

		"publishDate": "2021-01-03T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd471818",
		"id": "Transfer-Learning-or-Self-Supervised-Learning-What-would-you-choose-5b21ca3eeb7f6fbccd471818",
		"title": "Transfer Learning or Self-Supervised Learning. What would you choose?",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471818",
			"name": "Artificial Intelligence"
		},
		"keywords": ["Self-Supervised Learning", "Transfer Learning"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-01-07T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd471819",
		"id": "Self-Supervised-Learning-For-Robot-to-Overcome-Distraction-and-Improve-Generalization-5b21ca3eeb7f6fbccd471819",
		"title": "Self-Supervised Learning For Robot to Overcome Distraction and Improve Generalization",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471818",
			"name": "Artificial Intelligence"
		},
		"keywords": ["Policy Adaptation", "Self-Supervised Learning", "Reinforcement Learning"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-01-09T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd473682",
		"id": "Bloom-Filters-5b21ca3eeb7f6fbccd473682",
		"title": "Bloom Filters",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd485765",
			"name": "Data Structure"
		},
		"keywords": [],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-04-16T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd473688",
		"id": "Monotonic-Stack-5b21ca3eeb7f6fbccd473688",
		"title": "Monotonic Stack",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd485765",
			"name": "Data Structure"
		},
		"keywords": ["Stack"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-06-14T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd471388",
		"id": "Designing-Data-Pipeline-Architechture-5b21ca3eeb7f6fbccd471388",
		"title": "Designing Data Pipeline Architechture",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd486891",
			"name": "Data Analytics"
		},
		"keywords": ["Data Pipeline", "Data Architechture", "System Design"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-06-16T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd477888",
		"id": "Solving-array-problems-with-two-pointers-5b21ca3eeb7f6fbccd477888",
		"title": "Solving array problems with two pointers",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd486412",
			"name": "Algorithms"
		},
		"keywords": ["Arrays", "Sliding Window", "Two Pointers"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-06-16T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd477258",
		"id": "Recursion-and-Memoisation-5b21ca3eeb7f6fbccd477258",
		"title": "Recursion and Memoization",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd486412",
			"name": "Algorithms"
		},
		"keywords": ["Recursion", "Memoization", "Dynamic Programming"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-06-18T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd479058",
		"id": "Storing-Credentials-in-AWS-Kubernetes-CICD-5b21ca3eeb7f6fbccd479058",
		"title": "Storing Credentials in AWS, Kubernetes, CI/CD",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471432",
			"name": "DevOps"
		},
		"keywords": ["CI/CD", "Kubernetes", "AWS", "Jenkins", "CircleCI"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-02T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd479558",
		"id": "Review-of-Hao-et-al-Puma-Programmable-UI-Automation-for-Large-Scale-Dynamic-Analysis-of-Mobile-Apps-5b21ca3eeb7f6fbccd479558",
		"title": "Review of Hao et al. Puma: Programmable UI-Automation for Large-Scale Dynamic Analysis of Mobile Apps",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471820",
			"name": "Security"
		},
		"keywords": ["Mobile Security", "Android", "Mobile Apps"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-03T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd479858",
		"id": "Review-of-Enck-et-al-TaintDroid-An-Information-Flow-Tracking-System-for-Realtime-Privacy-Monitoring-on-Smartphoness-5b21ca3eeb7f6fbccd479858",
		"title": "Review of Enck et al., TaintDroid: An Information-Flow Tracking System for Realtime Privacy Monitoring on Smartphones",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471820",
			"name": "Security"
		},
		"keywords": ["Mobile Security", "Android", "Android Malware", "Privacy"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-03T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccd479458",
		"id": "Review-of-Arzt-et-al-FlowDroid-precise-context-flow-field-object-sensitive-and-lifecycle-aware-taint-analysis-for-Android-apps-5b21ca3eeb7f6fbccd479458",
		"title": "Review of Arzt et al., FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471820",
			"name": "Security"
		},
		"keywords": ["Mobile Security", "Android", "Mobile Apps"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-02T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbccb473682",
		"id": "Choosing-between-Greedy-and-Dynamic-Programming-Which-one-is-better-5b21ca3eeb7f6fbccb473682",
		"title": "Choosing between Greedy and Dynamic Programming - Which one is better?",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd486412",
			"name": "Algorithms"
		},
		"keywords": ["Greedy Algorithm", "Dynamic Programming"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-04T07:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f7fbccd473682",
		"id": "Differences-between-Temporal-Difference-Monte-Carlo-and-Dynamic-Programming-based-approaches-to-Reinforcement-Learning-RL-5b21ca3eeb7f7fbccd473682",
		"title": "Differences between Temporal Difference, Monte Carlo and Dynamic Programming based approaches to Reinforcement Learning (RL)",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471818",
			"name": "Artificial Intelligence"
		},
		"keywords": ["Temporal Difference", "Monte Carlo", "Reinforcement Learning", "Machine learning", "Dynamic Programming"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-04T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7fafbccd473682",
		"id": "Self-service-provisioning-of-microservices-5b21ca3eeb7fafbccd473682",
		"title": "Self-service provisioning of microservices",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471432",
			"name": "DevOps"
		},
		"keywords": ["Microservices", "Automation"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-05T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbcdd479458",
		"id": "Review-of-Wong-and-Lie-IntelliDroid-A-Targeted-Input-Generator-for-the-Dynamic-Analysis-of-Android-Malware-5b21ca3eeb7f6fbcdd479458",
		"title": "Review of Wong and Lie, IntelliDroid: A Targeted Input Generator for the Dynamic Analysis of Android Malware",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd471820",
			"name": "Security"
		},
		"keywords": ["Mobile Security", "Android", "Android Malware"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-08T19:04:28.809Z"
	},
	{
		"_id ": "5b21ca3eeb7f6fbcdd479062",
		"id": "Depth-First-Search-and-How-to-solve-examples-based-on-DFS-5b21ca3eeb7f6fbcdd479062",
		"title": "Depth First Search and How to solve examples based on DFS",
		"topic": {
			"_id": "5b21ca3eeb7f6fbccd486412",
			"name": "Algorithms"
		},
		"keywords": ["Graph Search", "Depth First Search", "Stack", "Path Finding"],
		"dailyRentalRate": 2.5,
		"publishDate": "2021-07-12T19:04:28.809Z"
	}




]
